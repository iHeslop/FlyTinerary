name: CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install front-end dependencies
        run: cd front-end && npm install

      - name: Install back-end dependencies
        run: cd back-end && npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push front-end
        id: docker_build_front-end
        uses: docker/build-push-action@v2
        with:
          context: ./front-end
          file: ./front-end/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flytinerary_frontend:latest

      - name: Build and push back-end
        id: docker_build_back-end
        uses: docker/build-push-action@v2
        with:
          context: ./back-end
          file: ./back-end/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flytinerary_backend:latest

      - name: Image digest front-end
        run: echo ${{ steps.docker_build_front-end.outputs.digest }}

      - name: Image digest back-end
        run: echo ${{ steps.docker_build_back-end.outputs.digest }}
